name: 'Bicep Whatif / Deploy'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write


jobs:
  # prep-sub:
  #   name: 'Prepare Cluster Subscription'
  #   environment: prod
  #   runs-on: ubuntu-latest

  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #   # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Subscription Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file subscription.bicep

  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       parameters-file: ./subscription.bicepparam
  #       # validation-level: 'providerNoRbac'     

  #   # Preview changes
  #   - name: "What-If"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       parameters-file: ./subscription.bicepparam

  #   # Deploy
  #   - name: "Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: deploy-${{ github.run_id }}
  #       location: usgovarizona
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       parameters-file: ./subscription.bicepparam
                        
  # deploy-hub:
  #   name: 'Deploy hub'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   needs: [prep-sub]

  #   outputs:
  #     hubVnetResourceId: ${{ steps.hub-deploy.outputs.hubVnetId }}

  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Hub Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file networking/hub-region.v0.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Hub Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/hub-region.v0.bicep  
  #       parameters: '{"location": ${{ vars.LOCATION }}}'

  #   # Preview changes
  #   - name: "What-If Hub Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/hub-region.v0.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}}'

  #   # Deploy
  #   - name: "Hub Bicep Deployment"
  #     id: hub-deploy
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: deploy-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./networking/hub-region.v0.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}}'
  
  # deploy-jumpbox-imagebuilder:
  #   name: 'Deploy jumpbox image builder'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   # needs: [deploy-hub]
  #   env:
  #     HUB_VNET_ID: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-hubs/providers/Microsoft.Network/virtualNetworks/vnet-usgovarizona-hub"

    
  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Jump Spoke Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file networking/spoke-BU0001A0005-00.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Jump Spoke Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-00.bicep  
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.HUB_VNET_ID }}}'

  #   # Preview changes
  #   - name: "What-If Jump Spoke Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-00.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.HUB_VNET_ID }}}'

  #   # Deploy
  #   - name: "Jump Spoke Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: deploy-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./networking/spoke-BU0001A0005-00.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.HUB_VNET_ID }}}'

  #   # Update hub to add subnet info for AIB    
  #   - name: "Update hub VNet"
  #     env: 
  #       RESOURCEID_SUBNET_AIB: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-00/subnets/snet-imagebuilder"
  #     uses: Azure/bicep-deploy@v2
  #     with: 
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: update-hub-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: networking/hub-region.v1.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "aksImageBuilderSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}}'

  # deploy-custom-roles:
  #   name: 'Deploy custom AIB roles'
  #   environment: prod
  #   runs-on: ubuntu-latest

  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #   # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint AIB Role Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file jumpbox/createsubscriptionroles.bicep

  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/createsubscriptionroles.bicep

  #   # Preview changes
  #   - name: "What-If"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/createsubscriptionroles.bicep


  #   # Deploy
  #   - name: "Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: DeployAibRbacRoles
  #       location: usgovarizona
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/createsubscriptionroles.bicep

  # deploy-jumpbox-template:
  #   name: 'Deploy jumpbox image template'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   env:
  #     RESOURCEID_SUBNET_AIB: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-00/subnets/snet-imagebuilder"
  #     ROLEID_NETWORKING: "37f5932f-be03-5e91-b655-a2cae1ab3d17"
  #     ROLEID_IMGDEPLOY: "013337e2-e391-5fec-9779-b0e6181eb89c"
  
  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Jump Spoke Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file jumpbox/azuredeploy.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Jumpbox Template Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-CreateJumpBoxImageTemplate
  #       scope: resourceGroup
  #       resource-group-name: rg-bu0001a0005 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/azuredeploy.bicep 
  #       parameters: '{"location": ${{ vars.LOCATION }}, "buildInSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "imageBuilderNetworkingRoleGuid": ${{ env.ROLEID_NETWORKING }}, "imageBuilderImageCreationRoleGuid": ${{ env.ROLEID_IMGDEPLOY }}}'

  #   # Preview changes
  #   - name: "What-If Jumpbox Template Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-CreateJumpBoxImageTemplate
  #       scope: resourceGroup
  #       resource-group-name: rg-bu0001a0005 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/azuredeploy.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "buildInSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "imageBuilderNetworkingRoleGuid": ${{ env.ROLEID_NETWORKING }}, "imageBuilderImageCreationRoleGuid": ${{ env.ROLEID_IMGDEPLOY }}}'

  #   # Deploy
  #   - name: "Jumpbox Template Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: CreateJumpBoxImageTemplate
  #       scope: resourceGroup
  #       resource-group-name: rg-bu0001a0005 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./jumpbox/azuredeploy.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "buildInSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "imageBuilderNetworkingRoleGuid": ${{ env.ROLEID_NETWORKING }}, "imageBuilderImageCreationRoleGuid": ${{ env.ROLEID_IMGDEPLOY }}}'
        
  # deploy-cluster-spoke:
  #   name: 'Deploy cluster spoke'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   env:
  #     RESOURCEID_VNET_HUB: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-hubs/providers/Microsoft.Network/virtualNetworks/vnet-usgovarizona-hub"
  
  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Cluster Spoke Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file networking/spoke-BU0001A0005-01.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Cluster Spoke Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-ClusterSpokeDeployment
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-01.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.RESOURCEID_VNET_HUB }}}'

  #   # Preview changes
  #   - name: "What-If Cluster Spoke Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-ClusterSpokeDeployment
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-01.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.RESOURCEID_VNET_HUB }}}'

  #   # Deploy
  #   - name: "Cluster Spoke Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: spoke-BU0001A0005-01
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./networking/spoke-BU0001A0005-01.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.RESOURCEID_VNET_HUB }}}'

  #   # Update hub to add subnet info for AIB    
  #   - name: "Update hub VNet"
  #     env: 
  #       RESOURCEID_SUBNET_AIB: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-00/subnets/snet-imagebuilder"
  #       RESOURCEID_SUBNET_NODEPOOLS: "['/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-cluster-systemnodepool','/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-cluster-inscopenodepools','/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-cluster-outofscopenodepools']"
  #       RESOURCEID_SUBNET_JUMPBOX: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-management-ops"
  #     uses: Azure/bicep-deploy@v2
  #     with: 
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: update-hub-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: networking/hub-region.v2.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "aksImageBuilderSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "nodepoolSubnetResourceIds": ${{ env.RESOURCEID_SUBNET_NODEPOOLS }}, "aksJumpboxSubnetResourceId": ${{ env.RESOURCEID_SUBNET_JUMPBOX }}}'

  deploy-pre-cluster-stamp:
    name: 'Deploy pre-cluster stamp'
    environment: prod
    runs-on: ubuntu-latest
    env:
      RESOURCEID_VNET_CLUSTERSPOKE: "/subscriptions/e988adf3-139b-452f-9468-e395fb31b1be/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01"
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Authenticate to Az CLI using OIDC
    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        environment: ${{ vars.ENVIRONMENT }}
        audience: ${{ vars.AUDIENCE }}

     # Checks that all Bicep configuration files adhere to a canonical format
    - name: Bicep Lint Pre-Cluster Stamp Deployment
      uses: Azure/cli@v2
      with:
        inlineScript: |
          az bicep build --file pre-cluster-stamp.bicep
        
    # Validate whether a template is valid at subscription scope
    - name: Bicep Validate Pre-Cluster Stamp Deployment
      uses: Azure/bicep-deploy@v2
      with:
        environment: ${{ vars.ENVIRONMENT }}
        type: deployment
        operation: validate
        name: validate-ClusterSpokeDeployment
        scope: resourceGroup
        resource-group-name: rg-bu0001a0005 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        template-file: ./pre-cluster-stamp.bicep
        parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "aksIngressControllerCertificate": ${{ secrets.INGRESS_CONTROLLER_CERTIFICATE_BASE64 }}}'

    # Preview changes
    - name: "What-If Pre-Cluster Stamp Deployment"
      uses: Azure/bicep-deploy@v2
      with:
        environment: ${{ vars.ENVIRONMENT }}
        type: deployment
        operation: whatIf
        name: whatif-ClusterSpokeDeployment
        scope: resourceGroup
        resource-group-name: rg-bu0001a0005 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        template-file: ./pre-cluster-stamp.bicep
        parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "aksIngressControllerCertificate": ${{ secrets.INGRESS_CONTROLLER_CERTIFICATE_BASE64 }}}'

    # Deploy
    - name: "Pre-Cluster Stamp Deployment"
      uses: Azure/bicep-deploy@v2
      with:
        environment: 'azureUSGovernment'
        type: deployment
        operation: create
        name: spoke-BU0001A0005-01
        scope: resourceGroup
        resource-group-name: rg-bu0001a0005 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
        template-file: ./pre-cluster-stamp.bicep
        parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "aksIngressControllerCertificate": ${{ secrets.INGRESS_CONTROLLER_CERTIFICATE_BASE64 }}}'