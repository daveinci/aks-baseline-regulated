name: 'Bicep Whatif / Deploy'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write


jobs:
  # prep-sub:
  #   name: 'Prepare Cluster Subscription'
  #   environment: prod
  #   runs-on: ubuntu-latest

  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #   # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Subscription Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file subscription.bicep

  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       parameters-file: ./subscription.bicepparam
  #       # validation-level: 'providerNoRbac'     

  #   # Preview changes
  #   - name: "What-If"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       parameters-file: ./subscription.bicepparam

  #   # Deploy
  #   - name: "Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: deploy-${{ github.run_id }}
  #       location: usgovarizona
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       parameters-file: ./subscription.bicepparam
                        
  # deploy-hub:
  #   name: 'Deploy hub'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   # needs: [prep-sub]

  #   outputs:
  #     hubVnetResourceId: ${{ steps.hub-deploy.outputs.hubVnetId }}

  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Hub Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file networking/hub-region.v0.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Hub Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/hub-region.v0.bicep  
  #       parameters: '{"location": ${{ vars.LOCATION }}}'

  #   # Preview changes
  #   - name: "What-If Hub Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/hub-region.v0.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}}'

  #   # Deploy
  #   - name: "Hub Bicep Deployment"
  #     id: hub-deploy
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: deploy-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./networking/hub-region.v0.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}}'
  
  # deploy-jumpbox-imagebuilder:
  #   name: 'Deploy jumpbox image builder'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   # needs: [deploy-hub]
  #   env:
  #     HUB_VNET_ID: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-hubs/providers/Microsoft.Network/virtualNetworks/vnet-usgovarizona-hub"

    
  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Jump Spoke Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file networking/spoke-BU0001A0005-00.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Jump Spoke Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-00.bicep  
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.HUB_VNET_ID }}}'

  #   # Preview changes
  #   - name: "What-If Jump Spoke Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-00.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.HUB_VNET_ID }}}'

  #   # Deploy
  #   - name: "Jump Spoke Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: deploy-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./networking/spoke-BU0001A0005-00.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.HUB_VNET_ID }}}'

  #   # Update hub to add subnet info for AIB    
  #   - name: "Update hub VNet"
  #     env: 
  #       RESOURCEID_SUBNET_AIB: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-00/subnets/snet-imagebuilder"
  #     uses: Azure/bicep-deploy@v2
  #     with: 
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: update-hub-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: networking/hub-region.v1.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "aksImageBuilderSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}}'

  # deploy-custom-roles:
  #   name: 'Deploy custom AIB roles'
  #   environment: prod
  #   runs-on: ubuntu-latest

  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #   # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint AIB Role Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file jumpbox/createsubscriptionroles.bicep

  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/createsubscriptionroles.bicep

  #   # Preview changes
  #   - name: "What-If"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-${{ github.run_id }}
  #       location: ${{ vars.LOCATION }}
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/createsubscriptionroles.bicep


  #   # Deploy
  #   - name: "Bicep Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: DeployAibRbacRoles
  #       location: usgovarizona
  #       scope: subscription
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./jumpbox/createsubscriptionroles.bicep

  deploy-jumpbox-template:
    name: 'Deploy jumpbox image template'
    environment: prod
    runs-on: ubuntu-latest
    env:
      RESOURCEID_SUBNET_AIB: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-00/subnets/snet-imagebuilder"
      ROLEID_NETWORKING: "356639d0-ea13-5819-a377-e8c0701f66fa"
      ROLEID_IMGDEPLOY: "0c918cf1-7459-5884-af3c-26126456234c"
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Authenticate to Az CLI using OIDC
    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        environment: ${{ vars.ENVIRONMENT }}
        audience: ${{ vars.AUDIENCE }}

     # Checks that all Bicep configuration files adhere to a canonical format
    - name: Bicep Lint Jump Spoke Deployment
      uses: Azure/cli@v2
      with:
        inlineScript: |
          az bicep build --file jumpbox/azuredeploy.bicep
        
    # Validate whether a template is valid at subscription scope
    - name: Bicep Validate Jumpbox Template Deployment
      uses: Azure/bicep-deploy@v2
      with:
        environment: ${{ vars.ENVIRONMENT }}
        type: deployment
        operation: validate
        name: validate-CreateJumpBoxImageTemplate
        scope: resourceGroup
        resource-group-name: rg-bu0001a0005 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        template-file: ./jumpbox/azuredeploy.bicep 
        parameters: '{"location": ${{ vars.LOCATION }}, "buildInSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "imageBuilderNetworkingRoleGuid": ${{ env.ROLEID_NETWORKING }}, "imageBuilderImageCreationRoleGuid": ${{ env.ROLEID_IMGDEPLOY }}}'

    # Preview changes
    - name: "What-If Jumpbox Template Deployment"
      uses: Azure/bicep-deploy@v2
      with:
        environment: ${{ vars.ENVIRONMENT }}
        type: deployment
        operation: whatIf
        name: whatif-CreateJumpBoxImageTemplate
        scope: resourceGroup
        resource-group-name: rg-bu0001a0005 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        template-file: ./jumpbox/azuredeploy.bicep
        parameters: '{"location": ${{ vars.LOCATION }}, "buildInSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "imageBuilderNetworkingRoleGuid": ${{ env.ROLEID_NETWORKING }}, "imageBuilderImageCreationRoleGuid": ${{ env.ROLEID_IMGDEPLOY }}}'

    # Deploy
    - name: "Jumpbox Template Bicep Deployment"
      uses: Azure/bicep-deploy@v2
      with:
        environment: 'azureUSGovernment'
        type: deployment
        operation: create
        name: CreateJumpBoxImageTemplate
        scope: resourceGroup
        resource-group-name: rg-bu0001a0005 
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
        template-file: ./jumpbox/azuredeploy.bicep
        parameters: '{"location": ${{ vars.LOCATION }}, "buildInSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "imageBuilderNetworkingRoleGuid": ${{ env.ROLEID_NETWORKING }}, "imageBuilderImageCreationRoleGuid": ${{ env.ROLEID_IMGDEPLOY }}}'
        
  # deploy-cluster-spoke:
  #   name: 'Deploy cluster spoke'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   env:
  #     RESOURCEID_VNET_HUB: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-hubs/providers/Microsoft.Network/virtualNetworks/vnet-usgovarizona-hub"
  
  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Cluster Spoke Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file networking/spoke-BU0001A0005-01.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Cluster Spoke Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-ClusterSpokeDeployment
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-01.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.RESOURCEID_VNET_HUB }}}'

  #   # Preview changes
  #   - name: "What-If Cluster Spoke Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-ClusterSpokeDeployment
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./networking/spoke-BU0001A0005-01.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.RESOURCEID_VNET_HUB }}}'

  #   # Deploy
  #   - name: "Cluster Spoke Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: spoke-BU0001A0005-01
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-spokes 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./networking/spoke-BU0001A0005-01.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "hubVnetResourceId": ${{ env.RESOURCEID_VNET_HUB }}}'

  #   # Update hub to add subnet info for AIB    
  #   - name: "Update hub VNet"
  #     env: 
  #       RESOURCEID_SUBNET_AIB: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-00/subnets/snet-imagebuilder"
  #       RESOURCEID_SUBNET_NODEPOOLS: "['/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-cluster-systemnodepool','/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-cluster-inscopenodepools','/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-cluster-outofscopenodepools']"
  #       RESOURCEID_SUBNET_JUMPBOX: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01/subnets/snet-management-ops"
  #     uses: Azure/bicep-deploy@v2
  #     with: 
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: update-hub-${{ github.run_id }}
  #       scope: resourceGroup
  #       resource-group-name: rg-enterprise-networking-hubs
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: networking/hub-region.v2.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "aksImageBuilderSubnetResourceId": ${{ env.RESOURCEID_SUBNET_AIB }}, "nodepoolSubnetResourceIds": ${{ env.RESOURCEID_SUBNET_NODEPOOLS }}, "aksJumpboxSubnetResourceId": ${{ env.RESOURCEID_SUBNET_JUMPBOX }}}'

  # deploy-pre-cluster-stamp:
  #   name: 'Deploy pre-cluster stamp'
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   env:
  #     RESOURCEID_VNET_CLUSTERSPOKE: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01"
  
  #   steps:
  #   # Checkout the repository to the GitHub Actions runner
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   # Authenticate to Az CLI using OIDC
  #   - name: 'Az CLI login'
  #     uses: azure/login@v2
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       environment: ${{ vars.ENVIRONMENT }}
  #       audience: ${{ vars.AUDIENCE }}

  #    # Checks that all Bicep configuration files adhere to a canonical format
  #   - name: Bicep Lint Pre-Cluster Stamp Deployment
  #     uses: Azure/cli@v2
  #     with:
  #       inlineScript: |
  #         az bicep build --file pre-cluster-stamp.bicep
        
  #   # Validate whether a template is valid at subscription scope
  #   - name: Bicep Validate Pre-Cluster Stamp Deployment
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: validate
  #       name: validate-ClusterSpokeDeployment
  #       scope: resourceGroup
  #       resource-group-name: rg-bu0001a0005 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./pre-cluster-stamp.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "aksIngressControllerCertificate": ${{ secrets.INGRESS_CONTROLLER_CERTIFICATE_BASE64 }}}'

  #   # Preview changes
  #   - name: "What-If Pre-Cluster Stamp Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: ${{ vars.ENVIRONMENT }}
  #       type: deployment
  #       operation: whatIf
  #       name: whatif-ClusterSpokeDeployment
  #       scope: resourceGroup
  #       resource-group-name: rg-bu0001a0005 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #       template-file: ./pre-cluster-stamp.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "aksIngressControllerCertificate": ${{ secrets.INGRESS_CONTROLLER_CERTIFICATE_BASE64 }}}'

  #   # Deploy
  #   - name: "Pre-Cluster Stamp Deployment"
  #     uses: Azure/bicep-deploy@v2
  #     with:
  #       environment: 'azureUSGovernment'
  #       type: deployment
  #       operation: create
  #       name: spoke-BU0001A0005-01
  #       scope: resourceGroup
  #       resource-group-name: rg-bu0001a0005 
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
  #       template-file: ./pre-cluster-stamp.bicep
  #       parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "aksIngressControllerCertificate": ${{ secrets.INGRESS_CONTROLLER_CERTIFICATE_BASE64 }}}'

    # deploy-cluster-stamp:
    #   name: 'Deploy cluster stamp'
    #   environment: prod
    #   runs-on: ubuntu-latest
    #   env:
    #     RESOURCEID_VNET_CLUSTERSPOKE: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-enterprise-networking-spokes/providers/Microsoft.Network/virtualNetworks/vnet-spoke-BU0001A0005-01"
    #     RESOURCEID_IMAGE_JUMPBOX: "/subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/rg-bu0001a0005/providers/Microsoft.Compute/images/img-aksopsjb-20250709T042605"
    #     OBJECTID_GROUP_CLUSTERADMIN: "f00a502c-3216-4f7e-ac60-439fe73fb447"
    #     TENANTID_K8SRBAC: ${{ secrets.AZURE_TENANT_ID }}
    #     APP_GATEWAY_LISTENER_CERTIFICATE_BASE64:  ${{ secrets.APP_GATEWAY_LISTENER_CERTIFICATE_BASE64 }}
    #     CLOUDINIT_BASE64: "I2Nsb3VkLWNvbmZpZwp1c2VyczoKICAtIG5hbWU6IGxhYnVzZXIwMQogICAgc3VkbzogRmFsc2UKICAgIGxvY2tfcGFzc3dkOiBUcnVlCiAgICBzc2gtYXV0aG9yaXplZC1rZXlzOgogICAgICAtIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRRHZ2S0xMYXcwQ0xFY3pLTys4ekdBZEg5b3JjNFNheS83ZllHQ1YvbVN0amUyOG4zU1QrbThiQW1mRnZZSmk4aWt1VXJGczhTZ2NGUjBtb1NMZlE1TFBTWDVXZURsRHpHdkNGT0RxR3lBU0R4YmFTZjdVWjNVN0poWkQvWHc1c1hEZ09Vdnk1NXlDaTB4Y2Z1SzV5Q0FKcktmVC93bEJRKzFIbGQvS3BUZWM5UjFJdG51QjVZVW9jZjVnbTV3U1YxdDZvcE1LN2p3UFVRbFRDNXNidmtCMmZ1WWx5WURZWjY0SHJ3T3NJcFltR0o3QmZDZVNSNmZRUUh6d3VSR25neDJ1QWJxYWo2TnBhZldGTDAwaDhpMWhPRno5dmtwblMrODQzT3VqYUY0Q0pJYlNON0Z5OC9nWXRSRW5qWmFSRlVHRFdmWmkzVlloNnV2SnJMbk9NK3VuaGFoTGxMc05KT211ZWg0QmxzUWhoWVBRQWlmZ2szSHBBMlR2UC91bGNLQnpGcEVENjZKN21XSDlRcE1jSm1MVndDTmJRNzVGR1JrQ2FvN0FEdDVWZ0ozYUhINE9FaDNqQUlXVUd6NmtZdmlyanpWaU95blhFSzZsa3o0N3ZXMFhleGxvc3VWZmh2Vm1CakwvMm1nU1ZBemVEL3RxVU8xK09EbGh6clB4R3RnNHFmcmd4Qnc5aFYyMXlNODExQWZ4NldOeldVTzA1dXRNWmwvQnpIMlZzZzVBMU1SNTJ3SHNJck1JREFSQ25LQ0doT3R6ZkJzaS9CeXdUQWx5cGhkbjZxNVdQcUFVbis3NWo2RUZGVGFaVjduNzNVUnhJcmwrNnRpbno5NnJ3OTRBWW5VemRLMVR4ckUyWDZZU2I5YlduV1JUamhESSs3RnU4MWI3K2FHV0ZRPT0KICAtIG5hbWU6IGxhYnVzZXIwMgogICAgc3VkbzogRmFsc2UKICAgIGxvY2tfcGFzc3dkOiBUcnVlCiAgICBzc2gtYXV0aG9yaXplZC1rZXlzOgogICAgICAtIHNzaC1yc2EgQUFBQUIzTnphQzF5YzJFQUFBQURBUUFCQUFBQ0FRRERzMWZSYjNZTXhZRVA0b3lwWkUrYVNiY0RtVzdjb0lzUHFDM2gwL1NiejBMUExJazYrcHhnSk9neEppUDNGdE9SVW4zM25TdnpSd2hZYnNMeHhLa0lKb2hRYUlHN0dFQVNJbjZGQlBYZGxzTnNNM2gzbm9JU1RjTjMyRVJuTUZVRWtJU0N3V0JWRzlHUFFVMG03TzMyZEtOTkRpd3FpaFVLT0VIY2pXazFtczJvazdXVUZCWkxTLzdxc2dKaFlIaUZIWEQ2Ym4yWHVBandDMkVEU2tGeExmcHczTXk2OXg5dkFHYzhQSjM0UjJ6Y1JhTkg4UmhNVG5rcWVWeGdGOFB2YVp2SE5jdTNzN2hoc2Vpc0FFNk45ZUlzWHRlR3J6MzJRUmU3RWJkMW5QM1BjbGpidjMycU91bkFGOCtmd096Y2dvdzRiUVlqMnVOMTFwRThiSlcxZ21kTEYxcUdKQ2xqM05uSjNodU1weW1MazZYbzRxcWJaTUZrYlI5bXB2dXdkWlNqUnhPbVpQaHRIUjFKaURYVGZEb0UrTmdFdDNJSDdGNGdSSm0yYnRTTlZsSmFacVdTWVRhTG45QkhhLzdmVlNrcENRRU1PenhzaG5jVHNnMnBUSDJVWUdjZ3EyUWJTc2d1a0xvSWYzNXhOL1luVjNFNzg1cXNENUp0b094R0VlOVl3SkUvakM5ZDZwbjRiZkVUWitIcFFkYmNtb3lyQ3lsTGcrN2tZY2lJNitFbEMrcjN6NDBtRVdjcXdxTTlXZHRTYjIxREl6WnV4bE40VHZOaFExbXJqQXdqaHlwMWJseWJsblIxVHV1VWFzUjJDOU9EZW9zbFF3dlBoRFU0OUxpMTNhS1N4eGZtam9tVmszZDFlT29RZ2ZvRnRYd3hLVEdseDRYT2ZRPT0KICAtIG5hbWU6IGxhYmFkbQogICAgc3VkbzogQUxMPShBTEwpIE5PUEFTU1dEOkFMTAogICAgbG9ja19wYXNzd2Q6IFRydWUKICAgIHNzaC1hdXRob3JpemVkLWtleXM6CiAgICAgIC0gc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFDQVFEazlaMThWTTdxZk5vaDdnanBTcENrY2x1L255em9ZeXFZWXc4ZlhIQmZqUzN5YUhkN2NSV3ZDclJ2SUE1NWpIL3FxY2ljMSsvRGQ5U3IzLzVIQmJhU01pNUdrZHIrbDVtVWdSMnRDaSthbDd4T29JZ3dRWW5IeVgzMnBQWUlXSFNpU25NSnNPQ21ZL2lqTE5HNVQ1UjBSUm41cXFiYTNsbnhpWFZZSjhvVEQzaTRyWmZLVG5yck1tYlFYMlpqZGMzZEl0YW5BNE9Kb2NpQ0tlSFhNOUtiVksvTksyR2RwUUIyK2czL3czdnhBT0E4RkhWdm9EQ0EvUVRxUFBQMkZRM0pyV0oreXBSMmhKNjBVbkxhNG9VajA2V2dhOHAvbUhxeTZMOWxkTXBPaUJ3RHAwZHdFcUs5bkpXRkIzSkJMdGF1WWFJUnBoeTZ6VmtJaG5KN1FSdEZuQUVDbGJXVFdhQzEvcjFtODFSUDRvZ0x1dTlOcisrazA3bmpsMFo5dEJXUEI2TDJCM0puTnlaZnpacCtCK3FROXE4Y2RiRG1oSzZhYmU1c0pIV2FsTWJsMEsvZGpqWTJXZDFhNEpLVnMrRnovVEJMN3NKMTNVU29kN2ZXbFZmc3oyOHdvSGt0NzBRakhFT2MrV1p6ejNZWlVoRE8yL0N4SjY0dW05QW1naE5VclhkcHNMVXVKMnVEUGxkVGVEVllQZ3NGTC9WOEtxQTBSOTlIdXNNZGgrR3ZmSUZHRWkvQi8rNCtEdGNzT2hkMGRqcWRseklyUzc3RytoTUFPZUZPZUh6NDVPOXVGZHNPR01qdHhHYzdDZmFheHpjMmdEU1grY0hNc3IvYk1DWFhVQnBxVjJyWjN6MUk5aW11VDlaYUczb253aUpEdk9TbHZLLytqaUp5SFE9PQ=="
    #     GITOPS_REPOURL: "https://github.com/daveinci/aks-baseline-regulated.git"
    #     GITOPS_CURRENT_BRANCH_NAME: "main"
    #   steps:
    #   # Checkout the repository to the GitHub Actions runner
    #   - name: Checkout
    #     uses: actions/checkout@v4

    #   # Authenticate to Az CLI using OIDC
    #   - name: 'Az CLI login'
    #     uses: azure/login@v2
    #     with:
    #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #       environment: ${{ vars.ENVIRONMENT }}
    #       audience: ${{ vars.AUDIENCE }}

    #   # Checks that all Bicep configuration files adhere to a canonical format
    #   - name: Bicep Lint Cluster Stamp Deployment
    #     uses: Azure/cli@v2
    #     with:
    #       inlineScript: |
    #         az bicep build --file cluster-stamp.bicep
        
    #   # Validate whether a template is valid at subscription scope
    #   - name: Bicep Validate Cluster Stamp Deployment
    #     uses: Azure/bicep-deploy@v2
    #     with:
    #       environment: ${{ vars.ENVIRONMENT }}
    #       type: deployment
    #       operation: validate
    #       name: validate-ClusterDeployment
    #       scope: resourceGroup
    #       resource-group-name: rg-bu0001a0005 
    #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #       template-file: ./cluster-stamp.bicep
    #       parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "clusterAdminEntraGroupObjectId": ${{ env.OBJECTID_GROUP_CLUSTERADMIN }}, "k8sControlPlaneAuthorizationTenantId": ${{ env.TENANTID_K8SRBAC }}, "appGatewayListenerCertificate": ${{ env.APP_GATEWAY_LISTENER_CERTIFICATE_BASE64 }}, "jumpBoxImageResourceId": ${{ env.RESOURCEID_IMAGE_JUMPBOX }}, "jumpBoxCloudInitAsBase64": ${{ env.CLOUDINIT_BASE64 }}, "gitOpsBootstrappingRepoHttpsUrl": ${{ env.GITOPS_REPOURL }}, "gitOpsBootstrappingRepoBranch": ${{ env.GITOPS_CURRENT_BRANCH_NAME }}}'

    #   # Preview changes
    #   - name: "What-If Cluster Stamp Deployment"
    #     uses: Azure/bicep-deploy@v2
    #     with:
    #       environment: ${{ vars.ENVIRONMENT }}
    #       type: deployment
    #       operation: whatIf
    #       name: whatif-ClusterDeployment
    #       scope: resourceGroup
    #       resource-group-name: rg-bu0001a0005 
    #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #       template-file: ./cluster-stamp.bicep
    #       parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "clusterAdminEntraGroupObjectId": ${{ env.OBJECTID_GROUP_CLUSTERADMIN }}, "k8sControlPlaneAuthorizationTenantId": ${{ env.TENANTID_K8SRBAC }}, "appGatewayListenerCertificate": ${{ env.APP_GATEWAY_LISTENER_CERTIFICATE_BASE64 }}, "jumpBoxImageResourceId": ${{ env.RESOURCEID_IMAGE_JUMPBOX }}, "jumpBoxCloudInitAsBase64": ${{ env.CLOUDINIT_BASE64 }}, "gitOpsBootstrappingRepoHttpsUrl": ${{ env.GITOPS_REPOURL }}, "gitOpsBootstrappingRepoBranch": ${{ env.GITOPS_CURRENT_BRANCH_NAME }}}'

    #   # Deploy
    #   - name: "Cluster Stamp Deployment"
    #     uses: Azure/bicep-deploy@v2
    #     with:
    #       environment: 'azureUSGovernment'
    #       type: deployment
    #       operation: create
    #       name: cluster-stamp
    #       scope: resourceGroup
    #       resource-group-name: rg-bu0001a0005 
    #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}        
    #       template-file: ./cluster-stamp.bicep
    #       parameters: '{"location": ${{ vars.LOCATION }}, "targetVnetResourceId": ${{ env.RESOURCEID_VNET_CLUSTERSPOKE }}, "clusterAdminEntraGroupObjectId": ${{ env.OBJECTID_GROUP_CLUSTERADMIN }}, "k8sControlPlaneAuthorizationTenantId": ${{ env.TENANTID_K8SRBAC }}, "appGatewayListenerCertificate": ${{ env.APP_GATEWAY_LISTENER_CERTIFICATE_BASE64 }}, "jumpBoxImageResourceId": ${{ env.RESOURCEID_IMAGE_JUMPBOX }}, "jumpBoxCloudInitAsBase64": ${{ env.CLOUDINIT_BASE64 }}, "gitOpsBootstrappingRepoHttpsUrl": ${{ env.GITOPS_REPOURL }}, "gitOpsBootstrappingRepoBranch": ${{ env.GITOPS_CURRENT_BRANCH_NAME }}}'
